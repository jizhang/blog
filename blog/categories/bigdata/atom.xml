<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: BigData | Ji ZHANG's Blog]]></title>
  <link href="http://shzhangji.com/blog/categories/bigdata/atom.xml" rel="self"/>
  <link href="http://shzhangji.com/"/>
  <updated>2015-09-03T20:27:13+08:00</updated>
  <id>http://shzhangji.com/</id>
  <author>
    <name><![CDATA[Ji ZHANG]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[View Spark Source in Eclipse]]></title>
    <link href="http://shzhangji.com/blog/2015/09/01/view-spark-source-in-eclipse/"/>
    <updated>2015-09-01T18:38:00+08:00</updated>
    <id>http://shzhangji.com/blog/2015/09/01/view-spark-source-in-eclipse</id>
    <content type="html"><![CDATA[<p>Reading source code is a great way to learn opensource projects. I used to read Java projects' source code on <a href="http://grepcode.com/">GrepCode</a> for it is online and has very nice cross reference features. As for Scala projects such as <a href="http://spark.apache.org">Apache Spark</a>, though its source code can be found on <a href="https://github.com/apache/spark/">GitHub</a>, it&rsquo;s quite necessary to setup an IDE to view the code more efficiently. Here&rsquo;s a howto of viewing Spark source code in Eclipse.</p>

<h2>Install Eclipse and Scala IDE Plugin</h2>

<p>One can download Eclipse from <a href="http://www.eclipse.org/downloads/">here</a>. I recommend the &ldquo;Eclipse IDE for Java EE Developers&rdquo;, which contains a lot of daily-used features.</p>

<p><img src="/images/scala-ide.png" alt="" /></p>

<p>Then go to Scala IDE&rsquo;s <a href="http://scala-ide.org/download/current.html">official site</a> and install the plugin through update site or zip archive.</p>

<h2>Generate Project File with Maven</h2>

<p>Spark is mainly built with Maven, so make sure you have Maven installed on your box, and download the latest Spark source code from <a href="http://spark.apache.org/downloads.html">here</a>, unarchive it, and execute the following command:</p>

<p><code>bash
$ mvn -am -pl core -DskipTests package eclipse:eclipse
</code></p>

<!-- more -->


<p>This command does a bunch of things. First, it indicates what modules should be built. Spark is a large project with multiple modules. Currently we&rsquo;re only interested in its core module, so <code>-pl</code> or <code>--projects</code> is used. <code>-am</code> or <code>--also-make</code> tells Maven to build core module&rsquo;s dependencies as well. We can see the module list in output:</p>

<p><code>text
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO]
[INFO] Spark Project Parent POM
[INFO] Spark Launcher Project
[INFO] Spark Project Networking
[INFO] Spark Project Shuffle Streaming Service
[INFO] Spark Project Unsafe
[INFO] Spark Project Core
</code></p>

<p><code>package</code> tells Maven to download all dependencies and compile the source code. If you encounter some <code>OutOfMemoryException</code>, try enlarging the heap size by setting <code>MAVEN_OPTS</code>:</p>

<p><code>bash
$ MAVEN_OPTS=-Xmx1G mvn ...
</code></p>

<p><code>eclipse:eclipse</code> will generate the <code>.project</code> and <code>.classpath</code> files for Eclipse. But the result is not perfect, both files need some fixes.</p>

<p>Edit <code>core/.classpath</code>, change the following two lines:</p>

<p><code>xml
&lt;classpathentry kind="src" path="src/main/scala" including="**/*.java"/&gt;
&lt;classpathentry kind="src" path="src/test/scala" output="target/scala-2.10/test-classes" including="**/*.java"/&gt;
</code></p>

<p>to</p>

<p><code>xml
&lt;classpathentry kind="src" path="src/main/scala" including="**/*.java|**/*.scala"/&gt;
&lt;classpathentry kind="src" path="src/test/scala" output="target/scala-2.10/test-classes" including="**/*.java|**/*.scala"/&gt;
</code></p>

<p>Edit <code>core/.project</code>, make it looks like this:</p>

<p>```xml
<buildSpec>
  <buildCommand></p>

<pre><code>&lt;name&gt;org.scala-ide.sdt.core.scalabuilder&lt;/name&gt;
</code></pre>

<p>  </buildCommand>
</buildSpec>
<natures>
  <nature>org.scala-ide.sdt.core.scalanature</nature>
  <nature>org.eclipse.jdt.core.javanature</nature>
</natures>
```</p>

<p>Now you can import &ldquo;Existing Projects into Workspace&rdquo;, including <code>core</code>, <code>launcher</code>, <code>network</code>, and <code>unsafe</code>.</p>

<h2>Miscellaneous</h2>

<h3>Access restriction: The type &lsquo;Unsafe&rsquo; is not API</h3>

<p>For module <code>spark-unsafe</code>, Eclipse will report an error &ldquo;Access restriction: The type &lsquo;Unsafe&rsquo; is not API (restriction on required library /path/to/jre/lib/rt.jar&rdquo;. To fix this, right click the &ldquo;JRE System Library&rdquo; entry in Package Explorer, change it to &ldquo;Workspace default JRE&rdquo;.</p>

<h3>Download Sources and Javadocs</h3>

<p>Add the following entry into pom&rsquo;s project / build / plugins:</p>

<p>```xml
<plugin></p>

<pre><code>&lt;artifactId&gt;maven-eclipse-plugin&lt;/artifactId&gt;
&lt;configuration&gt;
    &lt;downloadSources&gt;true&lt;/downloadSources&gt;
    &lt;downloadJavadocs&gt;true&lt;/downloadJavadocs&gt;
&lt;/configuration&gt;
</code></pre>

<p></plugin>
```</p>

<h3>build-helper-maven-plugin</h3>

<p>Since Spark is a mixture of Java and Scala code, and the maven-eclipse-plugin only knows about Java source files, so we need to use build-helper-maven-plugin to include the Scala sources, as is described <a href="http://docs.scala-lang.org/tutorials/scala-with-maven.html#integration-with-eclipse-scala-ide24">here</a>. Fortunately, Spark&rsquo;s pom.xml has already included this setting.</p>

<h2>References</h2>

<ul>
<li><a href="http://docs.scala-lang.org/tutorials/scala-with-maven.html">http://docs.scala-lang.org/tutorials/scala-with-maven.html</a></li>
<li><a href="https://wiki.scala-lang.org/display/SIW/ScalaEclipseMaven">https://wiki.scala-lang.org/display/SIW/ScalaEclipseMaven</a></li>
<li><a href="https://cwiki.apache.org/confluence/display/SPARK/Useful+Developer+Tools">https://cwiki.apache.org/confluence/display/SPARK/Useful+Developer+Tools</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
